#+title: Diving into JUMP Cell Painting data: Facilitating novel discoveries through accessible tools
#+OPTIONS: ^:nil H:2 num:t toc:nil
#+DATE: 2024/05/06
#+Author: Alán F. Muñoz
#+LaTeX_CLASS: beamer
#+BEAMER_THEME: metropolis
#+BEAMER_FRAME_LEVEL: 2
#+COLUMNS: %45ITEM %10BEAMER_env(Env) %10BEAMER_act(Act) %4BEAMER_col(Col) %8BEAMER_opt(Opt)

* Introduction: Turns out high content imaging is hard.
** The JUMP-CP Consortium produced large diverse datasets
*** Left :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:
- Raw images
#+ATTR_LATEX: :width 1.0\textwidth
[[./imgs/cellpainting.png]]
- Metadata tables
#+ATTR_LATEX: :width 1.0\textwidth
[[./imgs/metadata_table.png]]
*** Right :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:
- Morphological profiles
#+ATTR_LATEX: :width 1.0\textwidth
[[./imgs/profile_diagram.png]]
- Notebooks
#+ATTR_LATEX: :width 1.0\textwidth
[[./imgs/notebook.png]]

** Why is this a problem of scale?
# :PROPERTIES:
# :BEAMER_ACT: [<+->]
# :END:

-  @@b:<1>@@ *Loads of data*
  - ~115k chemical perturbations
  - ~15k genes (KO'd, overexpressed or both).

- @@b:<2>@@ *Scattered metadata*
  - How do we visualise the images from which a profile was produced?
  - Are these two perturbations from the same batch/plate?

- @@b:<3>@@ *Diverse backgrounds*
  - How can biologists with limited coding experience benefit?
  - How can developers build their own tools?

* We aim to help scientists further their research
** We use our own use-cases to make the data useful
:PROPERTIES:
:BEAMER_ACT: [<+>]
:END:

@@b:<1->@@ I have -omics data for *X* modified gene or chemical compound.
- How do cells affected by *X* look?
- What else produces similar morphologies?
- What are the distinctive features of *X*-perturbed cells?
- Can my *X* be found under a different name?

** Ease of access: We preprocess data publish it using WebAssembly
:PROPERTIES:
:BEAMER_ACT: [<+>]
:END:
- *Process data*: =jump_rr= (JUMP Round-Robin) is our tool to perform pairwise computations on profiles and their metadata on GPUs.

- *Publish results*: =Datasette= is a Python libary to visualise, query and edit databases.

** What else produces similar morphologies?
=matches=: Find the most similar (and dissimilar) perturbations.
#+ATTR_LATEX: :width 0.9\textwidth
[[./imgs/simile.jpg]]
** What else produces similar morphologies?
** What are the distinctive features of *X*-perturbed cells?
=feature=: Find the most distinctive features of a perturbation, or amongst all.
#+ATTR_LATEX: :width 0.9\textwidth
[[./imgs/feature.jpg]]
** What are the distinctive features of *X*-perturbed cells?
** How do cells affected by *X* look?
=gallery=: Explore all the images with an associated profile.
#+ATTR_LATEX: :width 0.9\textwidth
[[./imgs/gallery.jpg]]
** How do cells affected by *X* look?
** Does *X* have a different name in other databases?
=broad_babel=: Translates IDs (JUMP, Symbol/InChiKey, Entrez id, Broad) and which are controls.
#+ATTR_LATEX: :width 0.9\textwidth
[[./imgs/babel.jpg]]
** To summarise the available data
:PROPERTIES:
:BEAMER_opt: shrink=35
:END:

|                |                     |                      |                  |
|                |                     |                      |                  |
|                |                     |                      |                  |
|                |                     |                      |                  |
| Perturbation   | Match perturbations | Distinctive features | Images           |
|----------------+---------------------+----------------------+------------------|
| Overexpression | [[https://broad.io/orf][orf]]                 | [[https://broad.io/orf_feature][orf_feature]]          | [[https://broad.io/orf_gallery][orf_gallery]]      |
| Knocked-Out    | [[https://broad.io/crispr][crispr]]              | *WIP*                | [[https://broad.io/crispr_gallery][crispr_gallery]]   |
| Compound       | *WIP*               | *WIP*                | [[https://broad.io/compound_gallery][compound_gallery]] |
|                |                     |                      |                  |
|                |                     |                      |                  |

#+begin_src latex :export results
\begin{large}
For example:\\
- broad.io/orf\\
- broad.io/orf\_feature\\
- broad.io/orf\_gallery\\[0.5in]

Additionally, a table with all the available gene and their other ids:\\
- broad.io/babel

\end{large}
#+end_src

** =broad_babel=: Obtain metadata
Translates identifiers and provides essential metadata.
- What is the NCBI id of this gene?
- Is *X* perturbation a treatment or a control?

It doubles as a single source of metadata ground truth.

** =jump_portrait=: Spice-up your workflow with cell images

Fetch a subset of images associated to a perturbation. Optionally, include their respective negative controls.
- Images at the site level
- Include plate-specific negative controls, to account for batch effects.
- Can be used to train ML/DL models on images by-request.

** Other nice JUMP-adjacent tools
- jump-dti: Aggregate drug-target interaction databases
- cpg-data: Fetch images of Cell Painting Gallery

* Final remarks
** JUMP central concentrates knowledge
[[./imgs/jump_central.jpg]]

** We are working on publishing biological vignettes to showcase the use of morphological data
#+ATTR_LATEX: :width 0.9\textwidth
[[./imgs/jump_stories_github_issues.png]]
** Conclusions
We built tools to solve our challenges and help scientists:
- Web tools for experimentalists to explore their perturbations of interest
- Python libraries for software inclined folks to integrate into their workflows
- A general framework to facilitate sharing results and learning material

** Shameless plug: September JUMP Hackathon
#+ATTR_LATEX: :width 0.6\textwidth
[[./imgs/poster.jpg]]

** Resources
- *JUMP CP Consortium:* [[https://jump-cellpainting.broadinstitute.org/][jump-cellpainting.broadinstitute.org]]
- *JUMP information central:* [[https://broad.io/jump][broad.io/jump]]
- *Imaging Platform's monorepo:* [[https://broad.io/monorepo][broad.io/monorepo]]
- *Slides:* [[http://github.com/afermg/2024_05_JUMPTools_CellCircuits][github.com/afermg/2024_05_JUMPTools_CellCircuits]]

** Acknowledgements
*** CS Lab :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:
**** Carpenter-Singh Lab
  - Anne carpenter
  - Shantanu Singh
  - Niranj Chandrasekaran
  - John Arevalo
  - Sam Chen
  - Ankur Kumar
  - Ellen Su
  - Alex Kalinin
  - Adit Shah

*** Pictures :BMCOL:
:PROPERTIES:
:BEAMER_col: 0.4
:END:
#+ATTR_LATEX: :width 1.1\textwidth
[[./imgs/elevator_selfie.jpg]]
#+ATTR_LATEX: :width 0.5\textwidth
[[./imgs/broad_logo.png]]
#+ATTR_LATEX: :width 1.2\textwidth
[[./imgs/jump_partners.png]]


* org-beamer-mode :noexport:
Ensure org-beamer-mode upon save
# local variables:
# eval: (advice-add #'org-export-get-reference :override #'org-export-get-reference)
# eval: (org-beamer-mode)
# end:
